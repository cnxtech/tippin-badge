{"version":3,"sources":["webpack:///webpack:/webpack/bootstrap","webpack:///webpack:/src/bare.js","webpack:///webpack:/src/index.js","webpack:///webpack:/src/calc-text-width.js","webpack:///webpack:/src/color-presets.js","node_modules/escape-html/index.js","script.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","calcWidth","Verdana110","colorPresets","sanitize","str","replace","status","color","style","typeAssert","stTextWidth","stRectWidth","assertion","message","TypeError","bare","subject","icon","iconWidth","iconSpanWidth","length","sbTextStart","sbTextWidth","sbRectWidth","width","xlink","widthsVerdana110","charWidthTable","fallbackWidth","text","total","charWidth","charCodeAt","undefined","green","blue","red","yellow","orange","purple","pink","grey","gray","cyan","black","document","querySelector","innerText","version","badgeLinkUrl","username","badgeImageUrl","badgeSVG","badgeHtmlPreview","badgeHtml","badgeMarkdown","usernameInput","badgePreview","badgeHtmlSource","badgeMarkdownSource","badgeSvgSource","generateBadge","value","innerHTML","addEventListener"],"mappings":"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","file":"script.75da7f30.map","sourceRoot":"..","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(655);\n","const calcWidth = require('./calc-text-width.js').Verdana110\nconst colorPresets = require('./color-presets.js')\nconst sanitize = str => str.replace(/\\u0026/g, '&amp;').replace(/\\u003C/g, '&lt;')\n\nmodule.exports = ({ status, color, style }) => {\n  typeAssert(typeof status === 'string', '<status> must be string')\n  color = colorPresets[color] || color || colorPresets['blue']\n\n  const stTextWidth = calcWidth(status)\n  const stRectWidth = stTextWidth + 115\n\n  status = sanitize(status)\n\n  if (style === 'flat') {\n    return `<svg width=\"${stRectWidth / 10}\" height=\"20\" viewBox=\"0 0 ${stRectWidth} 200\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g>\n    <rect fill=\"#${color}\" x=\"0\" width=\"${stRectWidth}\" height=\"200\"/>\n  </g>\n  <g fill=\"#fff\" text-anchor=\"start\" font-family=\"Verdana,DejaVu Sans,sans-serif\" font-size=\"110\">\n    <text x=\"65\" y=\"148\" textLength=\"${stTextWidth}\" fill=\"#000\" opacity=\"0.1\">${status}</text>\n    <text x=\"55\" y=\"138\" textLength=\"${stTextWidth}\">${status}</text>\n  </g>\n</svg>`\n  }\n\n  return `<svg width=\"${stRectWidth / 10}\" height=\"20\" viewBox=\"0 0 ${stRectWidth} 200\" xmlns=\"http://www.w3.org/2000/svg\">\n  <linearGradient id=\"a\" x2=\"0\" y2=\"100%\">\n    <stop offset=\"0\" stop-opacity=\".1\" stop-color=\"#EEE\"/>\n    <stop offset=\"1\" stop-opacity=\".1\"/>\n  </linearGradient>\n  <mask id=\"m\"><rect width=\"${stRectWidth}\" height=\"200\" rx=\"30\" fill=\"#FFF\"/></mask>\n  <g mask=\"url(#m)\">\n    <rect width=\"${stRectWidth}\" height=\"200\" fill=\"#${color}\" x=\"0\"/>\n    <rect width=\"${stRectWidth}\" height=\"200\" fill=\"url(#a)\"/>\n  </g>\n  <g fill=\"#fff\" text-anchor=\"start\" font-family=\"Verdana,DejaVu Sans,sans-serif\" font-size=\"110\">\n    <text x=\"65\" y=\"148\" textLength=\"${stTextWidth}\" fill=\"#000\" opacity=\"0.25\">${status}</text>\n    <text x=\"55\" y=\"138\" textLength=\"${stTextWidth}\">${status}</text>\n  </g>\n</svg>`\n}\n\nconst typeAssert = (assertion, message) => {\n  if (!assertion) throw new TypeError(message)\n}\n","const calcWidth = require('./calc-text-width.js').Verdana110\nconst colorPresets = require('./color-presets.js')\nconst sanitize = str => str.replace(/\\u0026/g, '&amp;').replace(/\\u003C/g, '&lt;')\n\nconst bare = require('./bare.js')\n\nmodule.exports = ({ subject, status, color, style, icon, iconWidth = 13 }) => {\n  typeAssert(typeof status === 'string', '<status> must be string')\n\n  if (!subject && !icon) {\n    return bare({ status, color, style })\n  }\n\n  color = colorPresets[color] || color || colorPresets['blue']\n  iconWidth = iconWidth * 10\n\n  const iconSpanWidth = icon ? (subject.length ? iconWidth + 30 : iconWidth - 18) : 0\n  const sbTextStart = icon ? (iconSpanWidth + 50) : 50\n  const sbTextWidth = calcWidth(subject)\n  const stTextWidth = calcWidth(status)\n  const sbRectWidth = sbTextWidth + 100 + iconSpanWidth\n  const stRectWidth = stTextWidth + 100\n  const width = sbRectWidth + stRectWidth\n  const xlink = icon ? ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"' : ''\n\n  subject = sanitize(subject)\n  status = sanitize(status)\n\n  if (style === 'flat') {\n    return `<svg width=\"${width / 10}\" height=\"20\" viewBox=\"0 0 ${width} 200\" xmlns=\"http://www.w3.org/2000/svg\"${xlink}>\n  <g>\n    <rect fill=\"#555\" width=\"${sbRectWidth}\" height=\"200\"/>\n    <rect fill=\"#${color}\" x=\"${sbRectWidth}\" width=\"${stRectWidth}\" height=\"200\"/>\n  </g>\n  <g fill=\"#fff\" text-anchor=\"start\" font-family=\"Verdana,DejaVu Sans,sans-serif\" font-size=\"110\">\n    <text x=\"${sbTextStart + 10}\" y=\"148\" textLength=\"${sbTextWidth}\" fill=\"#000\" opacity=\"0.1\">${subject}</text>\n    <text x=\"${sbTextStart}\" y=\"138\" textLength=\"${sbTextWidth}\">${subject}</text>\n    <text x=\"${sbRectWidth + 55}\" y=\"148\" textLength=\"${stTextWidth}\" fill=\"#000\" opacity=\"0.1\">${status}</text>\n    <text x=\"${sbRectWidth + 45}\" y=\"138\" textLength=\"${stTextWidth}\">${status}</text>\n  </g>\n  ${icon ? `<image x=\"40\" y=\"35\" width=\"${iconWidth}\" height=\"132\" xlink:href=\"${icon}\"/>` : ''}\n</svg>`\n  }\n\n  return `<svg width=\"${width / 10}\" height=\"20\" viewBox=\"0 0 ${width} 200\" xmlns=\"http://www.w3.org/2000/svg\"${xlink}>\n  <linearGradient id=\"a\" x2=\"0\" y2=\"100%\">\n    <stop offset=\"0\" stop-opacity=\".1\" stop-color=\"#EEE\"/>\n    <stop offset=\"1\" stop-opacity=\".1\"/>\n  </linearGradient>\n  <mask id=\"m\"><rect width=\"${width}\" height=\"200\" rx=\"30\" fill=\"#FFF\"/></mask>\n  <g mask=\"url(#m)\">\n    <rect width=\"${sbRectWidth}\" height=\"200\" fill=\"#555\"/>\n    <rect width=\"${stRectWidth}\" height=\"200\" fill=\"#${color}\" x=\"${sbRectWidth}\"/>\n    <rect width=\"${width}\" height=\"200\" fill=\"url(#a)\"/>\n  </g>\n  <g fill=\"#fff\" text-anchor=\"start\" font-family=\"Verdana,DejaVu Sans,sans-serif\" font-size=\"110\">\n    <text x=\"${sbTextStart + 10}\" y=\"148\" textLength=\"${sbTextWidth}\" fill=\"#000\" opacity=\"0.25\">${subject}</text>\n    <text x=\"${sbTextStart}\" y=\"138\" textLength=\"${sbTextWidth}\">${subject}</text>\n    <text x=\"${sbRectWidth + 55}\" y=\"148\" textLength=\"${stTextWidth}\" fill=\"#000\" opacity=\"0.25\">${status}</text>\n    <text x=\"${sbRectWidth + 45}\" y=\"138\" textLength=\"${stTextWidth}\">${status}</text>\n  </g>\n  ${icon ? `<image x=\"40\" y=\"35\" width=\"${iconWidth}\" height=\"130\" xlink:href=\"${icon}\"/>` : ''}\n</svg>`\n}\n\nconst typeAssert = (assertion, message) => {\n  if (!assertion) throw new TypeError(message)\n}\n","const widthsVerdana110 = require('./widths-verdana-110.json')\n\nconst calcWidth = (charWidthTable) => {\n  const fallbackWidth = charWidthTable[64] // Width as \"@\" for overflows\n\n  return ([...text]) => {\n    let total = 0\n    let charWidth = 0\n    let i = text.length\n    while (i--) {\n      charWidth = charWidthTable[text[i].charCodeAt()]\n      total += charWidth === undefined ? fallbackWidth : charWidth\n    }\n    return total\n  }\n}\n\nmodule.exports = {\n  Verdana110: calcWidth(widthsVerdana110)\n}\n","module.exports = {\n  green: '3C1',\n  blue: '08C',\n  red: 'E43',\n  yellow: 'DB1',\n  orange: 'F73',\n  purple: '94E',\n  pink: 'E5B',\n  grey: '999',\n  gray: '999',\n  cyan: '1BC',\n  black: '2A2A2A'\n}\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","import {version} from './package';\nimport badgen from 'badgen';\nimport escape from 'escape-html';\n\ndocument.querySelector('.version').innerText = `v${version}`;\n\nconst badgeLinkUrl = username => `https://tippin.me/@${username}`;\nconst badgeImageUrl = username => `https://badgen.net/badge/%E2%9A%A1%EF%B8%8Ftippin.me/@${username}/F0918E`;\n\nconst badgeSVG = username => badgen({\n  subject: '⚡️tippin.me',\n  status: `@${username}`,\n  color: 'F0918E',\n});\n\nconst badgeHtmlPreview = username =>\n`<a href=\"${badgeLinkUrl(username)}\" rel=\"noopener noreferrer\" target=\"_blank\">\n  ${badgeSVG(username)}\n</a>`;\n\nconst badgeHtml = username =>\n`<a href=\"${badgeLinkUrl(username)}\" rel=\"noopener noreferrer\" target=\"_blank\">\n  <img src=\"${badgeImageUrl(username)}\" alt=\"@${username} on tippin.me\"/>\n</a>`;\n\nconst badgeMarkdown = username =>\n`[![tippin.me](${badgeImageUrl(username)})](${badgeLinkUrl(username)})`;\n\nconst usernameInput = document.querySelector('input[name=\"username\"]');\nconst badgePreview = document.querySelector('.badge-preview');\nconst badgeHtmlSource = document.querySelector('.badge-html');\nconst badgeMarkdownSource = document.querySelector('.badge-markdown');\nconst badgeSvgSource = document.querySelector('.badge-svg');\n\nconst generateBadge = () => {\n  const username = escape(usernameInput.value) || 'username';\n\n  badgePreview.innerHTML = badgeHtmlPreview(username);\n\n  badgeHtmlSource.innerText = badgeHtml(username);\n  badgeMarkdownSource.innerText = badgeMarkdown(username);\n  badgeSvgSource.innerText = badgeSVG(username);\n};\n\ngenerateBadge();\nusernameInput.addEventListener('input', generateBadge);\n"]}